<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="liga.store.warehouseservice.core.repository.ShippedProductRepository">

    <resultMap id="ShippedProductEntity"
               type="liga.store.warehouseservice.core.model.entity.ShippedProductEntity" autoMapping="true">
        <id property="id" column="id" jdbcType="BIGINT"/>
    </resultMap>

    <select id="findAll" resultMap="ShippedProductEntity">
        SELECT *
        FROM warehouse_data.shipped_product;
    </select>

    <select id="findById" resultMap="ShippedProductEntity">
        SELECT *
        FROM warehouse_data.shipped_product
        WHERE id = #{shippedProductId, jdbcType=BIGINT};
    </select>

    <select id="findByListId" resultMap="ShippedProductEntity">
        <bind name="" value=""/>
        SELECT *
        FROM warehouse_data.shipped_product
        <choose>
            <when test="shippedProductListId.isEmpty()">
                ORDER BY id DESC
                LIMIT 10;
            </when>
            <otherwise>
                WHERE id IN
                <foreach collection='shippedProductListId' item='id' open='(' separator=',' close=')'>
                    #{id, jdbcType=BIGINT}
                </foreach>
            </otherwise>
        </choose>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO warehouse_data.shipped_product (product_id, amount_difference, receiver, sender, carrier,
                                                    number_of_contract)
        VALUES (#{productId}, #{amountDifference}, #{receiver}, #{sender}, #{carrier}, #{numberOfContract});
    </insert>

    <insert id="insertAll" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO warehouse_data.shipped_product ( product_id, amount_difference, receiver, sender, carrier,
        number_of_contract) VALUES
        <foreach collection="shippedProductEntityList" item="shippedProductEntity" separator=",">
            (#{productId}, #{amountDifference}, #{receiver}, #{sender}, #{carrier},#{numberOfContract})
        </foreach>
    </insert>

    <update id="updateById" parameterType="liga.store.warehouseservice.core.model.entity.ShippedProductEntity">
        UPDATE warehouse_data.shipped_product SET
        <if test="productId != null">
            product_id = #{productId},
        </if>
        <if test="amountDifference != null">
            amount_difference = #{amountDifference},
        </if>
        <if test="receiver != null">
            receiver = #{receiver},
        </if>
        <if test="sender != null">
            sender = #{sender},
        </if>
        <if test="carrier != null">
            carrier = #{carrier},
        </if>
        <if test="numberOfContract != null">
            number_of_contract = #{numberOfContract},
        </if>
        WHERE id = #{id};
    </update>

    <delete id="deleteById">
        DELETE
        FROM warehouse_data.shipped_product
        WHERE id = #{shippedProductId};
    </delete>
</mapper>